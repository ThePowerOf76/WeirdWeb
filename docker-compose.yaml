services:
  frontend:
    build:
      context: .
      dockerfile: frontend/frontend.Dockerfile
    ports:
      - "5173:5173"
      - "24678:24678"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    # environment:
    #   - CHOKIDAR_USEPOLLING=${CHOKIDAR_USEPOLLING}
    #   - WDS_SOCKET_PORT=${WDS_SOCKET_PORT}
    #   - VITE_HMR_PORT=${VITE_HMR_PORT}
    restart: unless-stopped
    networks:
      - app-network
  backend:
    container_name: express-backend
    build:
      context: .
      dockerfile: backend/backend.Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - .:/app
      - /app/node_modules
    command: nodemon --exec node ./backend/index.js
    environment:
      - NODE_ENV=development
    env_file:
      - ./backend/.env
    
  mongo:
    image: mongo
    restart: always
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017/
      ME_CONFIG_BASICAUTH: false
networks:
  app-network:
    driver: bridge
